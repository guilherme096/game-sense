spring.application.name=live_game_service
server.port=8080

# Kafka Consumer Configuration
spring.kafka.bootstrap-servers=kafka:${KAFKA_INTERNAL_PORT}
spring.kafka.consumer.bootstrap-servers=kafka:${KAFKA_INTERNAL_PORT}
spring.kafka.consumer.group-id=games
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.idle-timeout=300000

# Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers=kafka:${KAFKA_INTERNAL_PORT}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# JSON Deserialization Configuration
spring.kafka.consumer.properties.spring.json.trusted.packages=ies.gamesense.live_game_service.entities
spring.kafka.consumer.properties.spring.json.value.default.type=ies.gamesense.live_game_service.entities.Match

# Redis Configuration
spring.cache.type=redis
spring.data.redis.host=redis_db
spring.data.redis.port=${REDIS_PORT}
spring.cache.redis.time-to-live=60000




